lmMod2 <- lm(ydata ~ xdata, data = seg2Subset)
segment2_y1 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[1, 2]
segment2_y2 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*100
} else {
seg2Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[1, 2]
& CEO_sample$xdata <= segmented.mod$psi[2, 2],
c('ydata' , 'xdata')]
lmMod2 <- lm(ydata ~ xdata, data = seg2Subset)
segment2_y1 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[1, 2]
segment2_y2 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[2, 2]
seg3Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[2, 2],
c('ydata' , 'xdata')]
lmMod3 <- lm(ydata ~ xdata, data = seg3Subset)
segment3_y1 <- lmMod3$coefficients[1] + lmMod3$coefficients[2]*segmented.mod$psi[2, 2]
segment3_y2 <- lmMod3$coefficients[1] + lmMod3$coefficients[2] * 100
}
###############################
# plot data
#commonTheme = list(labs(color="Density",fill="Density", x=xlabel, y=ylabel),
#                   theme_bw(), theme(legend.position=c(0,1),
#                         legend.justification=c(0,1)))
commonTheme = list(labs(color="Density",fill="Density",
x=xlabel,
y=ylabel),
theme_bw(),
theme(legend.position='none'))
ggplot(data = CEO_sample ,aes(CEO_sample$xdata, CEO_sample$ydata)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")+
#stat_density_2d(geom = "raster", aes(fill = ..density..), contour = FALSE) +
#  stat_density2d(aes(fill=..level..,alpha=..level..),geom='polygon',colour='black') +
scale_fill_continuous(low="lightblue",high="darkred") +
guides(alpha="none") +
geom_vline(xintercept = segmented.mod$psi[1, 2], colour = 'black', lwd = 1.5, lty = 2) +
geom_vline(xintercept = segmented.mod$psi[2, 2], colour = 'black', lwd = 1.5, lty = 2) +
commonTheme +coord_cartesian(xlim = c(0, 100), ylim = c(0, 100))
ggplot(data = CEO_sample ,aes(CEO_sample$xdata, CEO_sample$ydata)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")+
#stat_density_2d(geom = "raster", aes(fill = ..density..), contour = FALSE) +
#  stat_density2d(aes(fill=..level..,alpha=..level..),geom='polygon',colour='black') +
scale_fill_continuous(low="lightblue",high="darkred") +
guides(alpha="none") +
geom_vline(xintercept = segmented.mod$psi[1, 2], colour = 'black', lwd = 1.5, lty = 2) +
#geom_vline(xintercept = segmented.mod$psi[2, 2], colour = 'black', lwd = 1.5, lty = 2) +
commonTheme +coord_cartesian(xlim = c(0, 100), ylim = c(0, 100))
plot(CEO_sample$ydata~ CEO_sample$xdata)
length(ydata[ydata>25])
segmented.mod
lines(segmented.mod, col = 'red')
summary(lm(ydata ~ xdata, data = CEO_sample))
length(ydata[ydata>75])
plot(ydata[ydata>75]~xdata[ydata>75])
plot(ydata[ydata>50]~xdata[ydata>50])
plot(ydata~xdata)
xdata <- CEO$tcc
ydata <- CEO$TREEPLANTATIONORCHARD + CEO$TREEOTHER + CEO$TREEMANGROVE + CEO$BUILTTREE
xlabel <- "Predicted: Fractional Tree Cover"
ylabel <- "Validation Data: Fractional Tree Cover"
CEO_sampleLower <- cbind(ydata[xdata<=50],
xdata[xdata<=50],
ID[xdata<=50])
colnames(CEO_sampleLower) <- c('ydata','xdata','ID')
CEO_sampleUpper <- cbind(ydata[xdata>50],
xdata[xdata>50],
ID[xdata>50])
colnames(CEO_sampleUpper) <- c('ydata','xdata','ID')
sampleSize <- min(length(CEO_sampleLower[ , 1]),
length(CEO_sampleUpper[ , 1]))
LowerID <- sample(CEO_sampleLower[ ,'ID'], sampleSize)
UpperID <- sample(CEO_sampleUpper[ ,'ID'], sampleSize)
sampleData<-c(LowerID, UpperID)
length(sampleData)
sampleData<-cbind(sampleData,sampleData)
dim(sampleData)
colnames(sampleData)<-c('sampleData','sampleData2')
head(sampleData)
dataUpper <-  merge(CEO_sampleUpper, sampleData,
by.x = 'ID', by.y = 'sampleData')
dataLower <-  merge(CEO_sampleLower, sampleData,
by.x = 'ID', by.y = 'sampleData')
CEO_sample <- rbind(dataUpper[,-1], dataLower[,-1])
head(CEO_sample)
colnames(CEO_sample)[3]<-'ID'
#
##############################
# Segmented regression
# y ~ x
lin.mod <- lm(ydata ~ xdata, data = CEO_sample)
segmented.mod <- segmented(lin.mod, seg.Z = ~xdata, psi=20)
lines(segmented.mod, col = "blue")
segmented.mod
segmented.mod <- segmented(lin.mod, seg.Z = ~xdata, psi=c(20,40))
lines(segmented.mod, col = 'red')
segmented.mod
segmented.mod$psi[ , 2]
#fit models to each segment.
seg1Subset <- CEO_sample[CEO_sample$xdata <= segmented.mod$psi[1,2], 1:2]
head(seg1Subset)
lmMod1 <- lm(ydata ~ xdata, data = seg1Subset)
segment1_y1 <- lmMod1$coefficients[1] + lmMod1$coefficients[2]*1
segment1_y2 <- lmMod1$coefficients[1] + lmMod1$coefficients[2]*segmented.mod$psi[1, 2]
if(length(segmented.mod$psi[ , 2]) == 1){
seg2Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[1, 2],
c('ydata' , 'xdata')]
head(seg2Subset)
lmMod2 <- lm(ydata ~ xdata, data = seg2Subset)
segment2_y1 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[1, 2]
segment2_y2 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*100
} else {
seg2Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[1, 2]
& CEO_sample$xdata <= segmented.mod$psi[2, 2],
c('ydata' , 'xdata')]
lmMod2 <- lm(ydata ~ xdata, data = seg2Subset)
segment2_y1 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[1, 2]
segment2_y2 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[2, 2]
seg3Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[2, 2],
c('ydata' , 'xdata')]
lmMod3 <- lm(ydata ~ xdata, data = seg3Subset)
segment3_y1 <- lmMod3$coefficients[1] + lmMod3$coefficients[2]*segmented.mod$psi[2, 2]
segment3_y2 <- lmMod3$coefficients[1] + lmMod3$coefficients[2] * 100
}
###############################
# plot data
#commonTheme = list(labs(color="Density",fill="Density", x=xlabel, y=ylabel),
#                   theme_bw(), theme(legend.position=c(0,1),
#                         legend.justification=c(0,1)))
commonTheme = list(labs(color="Density",fill="Density",
x=xlabel,
y=ylabel),
theme_bw(),
theme(legend.position='none'))
plot(CEO_sample$ydata~ CEO_sample$xdata)
ggplot(data = CEO_sample ,aes(CEO_sample$xdata, CEO_sample$ydata)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")+
#stat_density_2d(geom = "raster", aes(fill = ..density..), contour = FALSE) +
#  stat_density2d(aes(fill=..level..,alpha=..level..),geom='polygon',colour='black') +
scale_fill_continuous(low="lightblue",high="darkred") +
guides(alpha="none") +
geom_vline(xintercept = segmented.mod$psi[1, 2], colour = 'black', lwd = 1.5, lty = 2) +
#geom_vline(xintercept = segmented.mod$psi[2, 2], colour = 'black', lwd = 1.5, lty = 2) +
commonTheme +coord_cartesian(xlim = c(0, 100), ylim = c(0, 100))
ggplot(data = CEO_sample ,aes(CEO_sample$xdata, CEO_sample$ydata)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")+
#stat_density_2d(geom = "raster", aes(fill = ..density..), contour = FALSE) +
#  stat_density2d(aes(fill=..level..,alpha=..level..),geom='polygon',colour='black') +
scale_fill_continuous(low="lightblue",high="darkred") +
guides(alpha="none") +
geom_vline(xintercept = segmented.mod$psi[1, 2], colour = 'black', lwd = 1.5, lty = 2) +
geom_vline(xintercept = segmented.mod$psi[2, 2], colour = 'black', lwd = 1.5, lty = 2) +
commonTheme +coord_cartesian(xlim = c(0, 100), ylim = c(0, 100))
ggplot(data = CEO_sample ,aes(CEO_sample$xdata, CEO_sample$ydata)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")+
#stat_density_2d(geom = "raster", aes(fill = ..density..), contour = FALSE) +
#  stat_density2d(aes(fill=..level..,alpha=..level..),geom='polygon',colour='black') +
scale_fill_continuous(low="lightblue",high="darkred") +
guides(alpha="none") +
geom_vline(xintercept = segmented.mod$psi[1, 2], colour = 'black', lwd = 1.5, lty = 2) +
#geom_vline(xintercept = segmented.mod$psi[2, 2], colour = 'black', lwd = 1.5, lty = 2) +
commonTheme +coord_cartesian(xlim = c(0, 100), ylim = c(0, 100))
xdata <- CEO$mangrove
ydata <- CEO$TREEMANGROVE + CEO$BUILTTREE
xlabel <- "Predicted: Prob of Mangrove"
ylabel <- "Validation Data: Fractional Mangrove Cover"
#############################################
## sample the data by strata
ID <- CEOfull$ID
CEO_sampleLower <- cbind(ydata[xdata<=50],
xdata[xdata<=50],
ID[xdata<=50])
colnames(CEO_sampleLower) <- c('ydata','xdata','ID')
CEO_sampleUpper <- cbind(ydata[xdata>50],
xdata[xdata>50],
ID[xdata>50])
colnames(CEO_sampleUpper) <- c('ydata','xdata','ID')
sampleSize <- min(length(CEO_sampleLower[ , 1]),
length(CEO_sampleUpper[ , 1]))
LowerID <- sample(CEO_sampleLower[ ,'ID'], sampleSize)
UpperID <- sample(CEO_sampleUpper[ ,'ID'], sampleSize)
sampleData<-c(LowerID, UpperID)
length(sampleData)
sampleData<-cbind(sampleData,sampleData)
dim(sampleData)
colnames(sampleData)<-c('sampleData','sampleData2')
head(sampleData)
dataUpper <-  merge(CEO_sampleUpper, sampleData,
by.x = 'ID', by.y = 'sampleData')
dataLower <-  merge(CEO_sampleLower, sampleData,
by.x = 'ID', by.y = 'sampleData')
CEO_sample <- rbind(dataUpper[,-1], dataLower[,-1])
head(CEO_sample)
colnames(CEO_sample)[3]<-'ID'
#
##############################
# Segmented regression
# y ~ x
lin.mod <- lm(ydata ~ xdata, data = CEO_sample)
segmented.mod <- segmented(lin.mod, seg.Z = ~xdata, psi=20)
lines(segmented.mod, col = "blue")
segmented.mod
segmented.mod <- segmented(lin.mod, seg.Z = ~xdata, psi=c(20,40))
lines(segmented.mod, col = 'red')
segmented.mod
segmented.mod$psi[ , 2]
#fit models to each segment.
seg1Subset <- CEO_sample[CEO_sample$xdata <= segmented.mod$psi[1,2], 1:2]
head(seg1Subset)
lmMod1 <- lm(ydata ~ xdata, data = seg1Subset)
segment1_y1 <- lmMod1$coefficients[1] + lmMod1$coefficients[2]*1
segment1_y2 <- lmMod1$coefficients[1] + lmMod1$coefficients[2]*segmented.mod$psi[1, 2]
if(length(segmented.mod$psi[ , 2]) == 1){
seg2Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[1, 2],
c('ydata' , 'xdata')]
head(seg2Subset)
lmMod2 <- lm(ydata ~ xdata, data = seg2Subset)
segment2_y1 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[1, 2]
segment2_y2 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*100
} else {
seg2Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[1, 2]
& CEO_sample$xdata <= segmented.mod$psi[2, 2],
c('ydata' , 'xdata')]
lmMod2 <- lm(ydata ~ xdata, data = seg2Subset)
segment2_y1 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[1, 2]
segment2_y2 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[2, 2]
seg3Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[2, 2],
c('ydata' , 'xdata')]
lmMod3 <- lm(ydata ~ xdata, data = seg3Subset)
segment3_y1 <- lmMod3$coefficients[1] + lmMod3$coefficients[2]*segmented.mod$psi[2, 2]
segment3_y2 <- lmMod3$coefficients[1] + lmMod3$coefficients[2] * 100
}
commonTheme = list(labs(color="Density",fill="Density",
x=xlabel,
y=ylabel),
theme_bw(),
theme(legend.position='none'))
plot(CEO_sample$ydata~ CEO_sample$xdata)
ggplot(data = CEO_sample ,aes(CEO_sample$xdata, CEO_sample$ydata)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")+
#stat_density_2d(geom = "raster", aes(fill = ..density..), contour = FALSE) +
#  stat_density2d(aes(fill=..level..,alpha=..level..),geom='polygon',colour='black') +
scale_fill_continuous(low="lightblue",high="darkred") +
guides(alpha="none") +
geom_vline(xintercept = segmented.mod$psi[1, 2], colour = 'black', lwd = 1.5, lty = 2) +
#geom_vline(xintercept = segmented.mod$psi[2, 2], colour = 'black', lwd = 1.5, lty = 2) +
commonTheme +coord_cartesian(xlim = c(0, 100), ylim = c(0, 100))
sampleSize
xdata <- CEO$mangrove
ydata <- CEO$TREEMANGROVE
xlabel <- "Predicted: Prob of Mangrove"
ylabel <- "Validation Data: Fractional Mangrove Cover"
#############################################
## sample the data by strata
ID <- CEOfull$ID
CEO_sampleLower <- cbind(ydata[xdata<=50],
xdata[xdata<=50],
ID[xdata<=50])
colnames(CEO_sampleLower) <- c('ydata','xdata','ID')
CEO_sampleUpper <- cbind(ydata[xdata>50],
xdata[xdata>50],
ID[xdata>50])
colnames(CEO_sampleUpper) <- c('ydata','xdata','ID')
sampleSize <- min(length(CEO_sampleLower[ , 1]),
length(CEO_sampleUpper[ , 1]))
LowerID <- sample(CEO_sampleLower[ ,'ID'], sampleSize)
UpperID <- sample(CEO_sampleUpper[ ,'ID'], sampleSize)
sampleData<-c(LowerID, UpperID)
length(sampleData)
sampleData<-cbind(sampleData,sampleData)
dim(sampleData)
colnames(sampleData)<-c('sampleData','sampleData2')
head(sampleData)
dataUpper <-  merge(CEO_sampleUpper, sampleData,
by.x = 'ID', by.y = 'sampleData')
dataLower <-  merge(CEO_sampleLower, sampleData,
by.x = 'ID', by.y = 'sampleData')
CEO_sample <- rbind(dataUpper[,-1], dataLower[,-1])
head(CEO_sample)
colnames(CEO_sample)[3]<-'ID'
#
##############################
# Segmented regression
# y ~ x
lin.mod <- lm(ydata ~ xdata, data = CEO_sample)
segmented.mod <- segmented(lin.mod, seg.Z = ~xdata, psi=20)
lines(segmented.mod, col = "blue")
segmented.mod
segmented.mod <- segmented(lin.mod, seg.Z = ~xdata, psi=c(20,40))
lines(segmented.mod, col = 'red')
segmented.mod
segmented.mod$psi[ , 2]
#fit models to each segment.
seg1Subset <- CEO_sample[CEO_sample$xdata <= segmented.mod$psi[1,2], 1:2]
head(seg1Subset)
lmMod1 <- lm(ydata ~ xdata, data = seg1Subset)
segment1_y1 <- lmMod1$coefficients[1] + lmMod1$coefficients[2]*1
segment1_y2 <- lmMod1$coefficients[1] + lmMod1$coefficients[2]*segmented.mod$psi[1, 2]
if(length(segmented.mod$psi[ , 2]) == 1){
seg2Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[1, 2],
c('ydata' , 'xdata')]
head(seg2Subset)
lmMod2 <- lm(ydata ~ xdata, data = seg2Subset)
segment2_y1 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[1, 2]
segment2_y2 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*100
} else {
seg2Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[1, 2]
& CEO_sample$xdata <= segmented.mod$psi[2, 2],
c('ydata' , 'xdata')]
lmMod2 <- lm(ydata ~ xdata, data = seg2Subset)
segment2_y1 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[1, 2]
segment2_y2 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[2, 2]
seg3Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[2, 2],
c('ydata' , 'xdata')]
lmMod3 <- lm(ydata ~ xdata, data = seg3Subset)
segment3_y1 <- lmMod3$coefficients[1] + lmMod3$coefficients[2]*segmented.mod$psi[2, 2]
segment3_y2 <- lmMod3$coefficients[1] + lmMod3$coefficients[2] * 100
}
###############################
# plot data
#commonTheme = list(labs(color="Density",fill="Density", x=xlabel, y=ylabel),
#                   theme_bw(), theme(legend.position=c(0,1),
#                         legend.justification=c(0,1)))
commonTheme = list(labs(color="Density",fill="Density",
x=xlabel,
y=ylabel),
theme_bw(),
theme(legend.position='none'))
plot(CEO_sample$ydata~ CEO_sample$xdata)
ggplot(data = CEO_sample ,aes(CEO_sample$xdata, CEO_sample$ydata)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")+
#stat_density_2d(geom = "raster", aes(fill = ..density..), contour = FALSE) +
#  stat_density2d(aes(fill=..level..,alpha=..level..),geom='polygon',colour='black') +
scale_fill_continuous(low="lightblue",high="darkred") +
guides(alpha="none") +
geom_vline(xintercept = segmented.mod$psi[1, 2], colour = 'black', lwd = 1.5, lty = 2) +
#geom_vline(xintercept = segmented.mod$psi[2, 2], colour = 'black', lwd = 1.5, lty = 2) +
commonTheme +coord_cartesian(xlim = c(0, 100), ylim = c(0, 100))
sampleSize
xdata <- CEO$grass
ydata <- CEO$GRASS
xlabel <- "Predicted: Prob of Mangrove"
ylabel <- "Validation Data: Fractional Mangrove Cover"
#############################################
## sample the data by strata
ID <- CEOfull$ID
CEO_sampleLower <- cbind(ydata[xdata<=50],
xdata[xdata<=50],
ID[xdata<=50])
colnames(CEO_sampleLower) <- c('ydata','xdata','ID')
CEO_sampleUpper <- cbind(ydata[xdata>50],
xdata[xdata>50],
ID[xdata>50])
colnames(CEO_sampleUpper) <- c('ydata','xdata','ID')
sampleSize <- min(length(CEO_sampleLower[ , 1]),
length(CEO_sampleUpper[ , 1]))
LowerID <- sample(CEO_sampleLower[ ,'ID'], sampleSize)
UpperID <- sample(CEO_sampleUpper[ ,'ID'], sampleSize)
sampleData<-c(LowerID, UpperID)
length(sampleData)
sampleData<-cbind(sampleData,sampleData)
dim(sampleData)
colnames(sampleData)<-c('sampleData','sampleData2')
head(sampleData)
dataUpper <-  merge(CEO_sampleUpper, sampleData,
by.x = 'ID', by.y = 'sampleData')
dataLower <-  merge(CEO_sampleLower, sampleData,
by.x = 'ID', by.y = 'sampleData')
CEO_sample <- rbind(dataUpper[,-1], dataLower[,-1])
head(CEO_sample)
colnames(CEO_sample)[3]<-'ID'
#
##############################
# Segmented regression
# y ~ x
lin.mod <- lm(ydata ~ xdata, data = CEO_sample)
segmented.mod <- segmented(lin.mod, seg.Z = ~xdata, psi=20)
lines(segmented.mod, col = "blue")
segmented.mod
segmented.mod <- segmented(lin.mod, seg.Z = ~xdata, psi=c(20,40))
lines(segmented.mod, col = 'red')
segmented.mod
segmented.mod$psi[ , 2]
#fit models to each segment.
seg1Subset <- CEO_sample[CEO_sample$xdata <= segmented.mod$psi[1,2], 1:2]
head(seg1Subset)
lmMod1 <- lm(ydata ~ xdata, data = seg1Subset)
segment1_y1 <- lmMod1$coefficients[1] + lmMod1$coefficients[2]*1
segment1_y2 <- lmMod1$coefficients[1] + lmMod1$coefficients[2]*segmented.mod$psi[1, 2]
if(length(segmented.mod$psi[ , 2]) == 1){
seg2Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[1, 2],
c('ydata' , 'xdata')]
head(seg2Subset)
lmMod2 <- lm(ydata ~ xdata, data = seg2Subset)
segment2_y1 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[1, 2]
segment2_y2 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*100
} else {
seg2Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[1, 2]
& CEO_sample$xdata <= segmented.mod$psi[2, 2],
c('ydata' , 'xdata')]
lmMod2 <- lm(ydata ~ xdata, data = seg2Subset)
segment2_y1 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[1, 2]
segment2_y2 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[2, 2]
seg3Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[2, 2],
c('ydata' , 'xdata')]
lmMod3 <- lm(ydata ~ xdata, data = seg3Subset)
segment3_y1 <- lmMod3$coefficients[1] + lmMod3$coefficients[2]*segmented.mod$psi[2, 2]
segment3_y2 <- lmMod3$coefficients[1] + lmMod3$coefficients[2] * 100
}
###############################
# plot data
#commonTheme = list(labs(color="Density",fill="Density", x=xlabel, y=ylabel),
#                   theme_bw(), theme(legend.position=c(0,1),
#                         legend.justification=c(0,1)))
commonTheme = list(labs(color="Density",fill="Density",
x=xlabel,
y=ylabel),
theme_bw(),
theme(legend.position='none'))
plot(CEO_sample$ydata~ CEO_sample$xdata)
ggplot(data = CEO_sample ,aes(CEO_sample$xdata, CEO_sample$ydata)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")+
#stat_density_2d(geom = "raster", aes(fill = ..density..), contour = FALSE) +
#  stat_density2d(aes(fill=..level..,alpha=..level..),geom='polygon',colour='black') +
scale_fill_continuous(low="lightblue",high="darkred") +
guides(alpha="none") +
geom_vline(xintercept = segmented.mod$psi[1, 2], colour = 'black', lwd = 1.5, lty = 2) +
#geom_vline(xintercept = segmented.mod$psi[2, 2], colour = 'black', lwd = 1.5, lty = 2) +
commonTheme +coord_cartesian(xlim = c(0, 100), ylim = c(0, 100))
#+
sampleSize
xdata <- CEO$shrub
ydata <- CEO$SHRUB
xlabel <- "Predicted: Prob of Mangrove"
ylabel <- "Validation Data: Fractional Mangrove Cover"
#############################################
## sample the data by strata
ID <- CEOfull$ID
CEO_sampleLower <- cbind(ydata[xdata<=50],
xdata[xdata<=50],
ID[xdata<=50])
colnames(CEO_sampleLower) <- c('ydata','xdata','ID')
CEO_sampleUpper <- cbind(ydata[xdata>50],
xdata[xdata>50],
ID[xdata>50])
colnames(CEO_sampleUpper) <- c('ydata','xdata','ID')
sampleSize <- min(length(CEO_sampleLower[ , 1]),
length(CEO_sampleUpper[ , 1]))
LowerID <- sample(CEO_sampleLower[ ,'ID'], sampleSize)
UpperID <- sample(CEO_sampleUpper[ ,'ID'], sampleSize)
sampleData<-c(LowerID, UpperID)
length(sampleData)
sampleData<-cbind(sampleData,sampleData)
dim(sampleData)
colnames(sampleData)<-c('sampleData','sampleData2')
head(sampleData)
dataUpper <-  merge(CEO_sampleUpper, sampleData,
by.x = 'ID', by.y = 'sampleData')
dataLower <-  merge(CEO_sampleLower, sampleData,
by.x = 'ID', by.y = 'sampleData')
CEO_sample <- rbind(dataUpper[,-1], dataLower[,-1])
head(CEO_sample)
colnames(CEO_sample)[3]<-'ID'
#
##############################
# Segmented regression
# y ~ x
lin.mod <- lm(ydata ~ xdata, data = CEO_sample)
segmented.mod <- segmented(lin.mod, seg.Z = ~xdata, psi=20)
lines(segmented.mod, col = "blue")
segmented.mod
segmented.mod <- segmented(lin.mod, seg.Z = ~xdata, psi=c(20,40))
lines(segmented.mod, col = 'red')
segmented.mod
segmented.mod$psi[ , 2]
#fit models to each segment.
seg1Subset <- CEO_sample[CEO_sample$xdata <= segmented.mod$psi[1,2], 1:2]
head(seg1Subset)
lmMod1 <- lm(ydata ~ xdata, data = seg1Subset)
segment1_y1 <- lmMod1$coefficients[1] + lmMod1$coefficients[2]*1
segment1_y2 <- lmMod1$coefficients[1] + lmMod1$coefficients[2]*segmented.mod$psi[1, 2]
if(length(segmented.mod$psi[ , 2]) == 1){
seg2Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[1, 2],
c('ydata' , 'xdata')]
head(seg2Subset)
lmMod2 <- lm(ydata ~ xdata, data = seg2Subset)
segment2_y1 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[1, 2]
segment2_y2 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*100
} else {
seg2Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[1, 2]
& CEO_sample$xdata <= segmented.mod$psi[2, 2],
c('ydata' , 'xdata')]
lmMod2 <- lm(ydata ~ xdata, data = seg2Subset)
segment2_y1 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[1, 2]
segment2_y2 <- lmMod2$coefficients[1] + lmMod2$coefficients[2]*segmented.mod$psi[2, 2]
seg3Subset <- CEO_sample[CEO_sample$xdata > segmented.mod$psi[2, 2],
c('ydata' , 'xdata')]
lmMod3 <- lm(ydata ~ xdata, data = seg3Subset)
segment3_y1 <- lmMod3$coefficients[1] + lmMod3$coefficients[2]*segmented.mod$psi[2, 2]
segment3_y2 <- lmMod3$coefficients[1] + lmMod3$coefficients[2] * 100
}
commonTheme = list(labs(color="Density",fill="Density",
x=xlabel,
y=ylabel),
theme_bw(),
theme(legend.position='none'))
plot(CEO_sample$ydata~ CEO_sample$xdata)
ggplot(data = CEO_sample ,aes(CEO_sample$xdata, CEO_sample$ydata)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")+
#stat_density_2d(geom = "raster", aes(fill = ..density..), contour = FALSE) +
#  stat_density2d(aes(fill=..level..,alpha=..level..),geom='polygon',colour='black') +
scale_fill_continuous(low="lightblue",high="darkred") +
guides(alpha="none") +
geom_vline(xintercept = segmented.mod$psi[1, 2], colour = 'black', lwd = 1.5, lty = 2) +
#geom_vline(xintercept = segmented.mod$psi[2, 2], colour = 'black', lwd = 1.5, lty = 2) +
commonTheme +coord_cartesian(xlim = c(0, 100), ylim = c(0, 100))
